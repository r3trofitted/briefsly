/**
 * Temporary resets
 * TODO: remove after global overhaul
 */
body {
  margin-inline: 0;

  /* creamy greys */
  --hsl-neutral-100: 30 33% 99%; /* white */
  --hsl-neutral-200: 45 29% 97%; /* bg light mode */
  --hsl-neutral-400: 45 4% 65%; /* grey */
  --hsl-neutral-700: 45 7% 34%; /* bg dark mode */
  --hsl-neutral-900: 44 100% 3%; /* black */
  
  /* caramel and chocolate */
  --hsl-primary-100: 49 81% 88%;
  --hsl-primary-400: 38 62% 47%;
  --hsl-primary-700: 37 26% 23%;
  
  /* teals and blues */
  --hsl-secondary-100: 184 59% 70%;
  --hsl-secondary-400: 184 59% 54%;
  --hsl-secondary-700: 186 79% 42%;
  --hsl-secondary-900: 186 79% 20%;
  
  /* TODO: pinks (tertiary) */
  
  /* Actual definitions */
  --clr-neutral-100: hsl(var(--hsl-neutral-100));
  --clr-neutral-200: hsl(var(--hsl-neutral-200)); /* aka #FAF9F6; */
  --clr-neutral-400: hsl(var(--hsl-neutral-400));
  --clr-neutral-700: hsl(var(--hsl-neutral-700));
  --clr-neutral-900: hsl(var(--hsl-neutral-900));

  --clr-primary-100: hsl(var(--hsl-primary-100));
  --clr-primary-400: hsl(var(--hsl-primary-400));
  --clr-primary-700: hsl(var(--hsl-primary-700));
  
  --clr-secondary-100: hsl(var(--hsl-secondary-100));
  --clr-secondary-400: hsl(var(--hsl-secondary-400));
  --clr-secondary-700: hsl(var(--hsl-secondary-700));
  --clr-secondary-900: hsl(var(--hsl-secondary-900));
  
  --ff-heading: Rockwell, 'Rockwell Nova', 'Roboto Slab', 'DejaVu Serif', 'Sitka Small', serif;
  
  --fs-500: 1.333rem;
  --fs-600: 1.763rem;
  --fs-700: 2.369rem;
  --fs-800: 3rem;
  
  background-color: var(--clr-neutral-200);
}

#open-a-slot {
  max-width: unset;
  padding-inline: 0;
}

/**
 * Reusable stuff
 */
.search-bar {
  display: flex;
  justify-content: center;
  margin-bottom: 1.5em;
  
  & input {
    background-color: var(--clr-neutral-100);
    width: 30ch;
    max-width: 30ch;
    border: solid 1px var(--clr-secondary-700);
    padding: 0.4rem 0.75rem;
    border-radius: .5rem 0 0 .5rem;
    margin-right: 0;
    
    &:focus-visible {
      outline: none;
      background-color: var(--clr-primary-100);
    }
  }
  
  & button {
    background: var(--clr-neutral-100);
    border: solid 1px var(--clr-secondary-700);
    border-left: 0;
    padding: 0.4rem 0.75rem;
    border-radius: 0 .5rem .5rem 0;
    margin-left: 0;
  }
  
  & button > span.reverso {
    display: inline-block;
    transform: rotate3d(0, 1, 0, 180deg);
    transition: transform 300ms;
  }
  
  & input:not(:placeholder-shown) ~ button > span.reverso {
    transform: rotate3d(0, 1, 0, 0deg);
  }
}

input[type='submit'].submit-button {
  margin-block: 1em;
  padding: .825em .5em .5em; /* room for the rounded border + extra padding on top to offset the font's baseline */
  
  color: var(--clr-secondary-700);
  font-family: var(--ff-heading);
  
  background-color: var(--clr-primary-100);
  border: 3px solid var(--clr-secondary-700);
  border-radius: 10% / 50%;
  
  &:hover {
    background-color: var(--clr-secondary-400);
  }
}

header:has(nav) {
  background-color: var(--clr-neutral-200);
  box-shadow: 0 .75rem 1rem -1rem var(--clr-primary-700);
  padding-block: .5em;
  color: var(--clr-primary-400);
  
  & a {
    color: var(--clr-neutral-900) !important; /* TODO: do without the !important */
  }
}

h1.page-title {
  position: relative;
    
  display: grid;
  grid-template-columns: 1fr 3fr 1fr;
  gap: 0.125em;
  place-content: center;
  
  margin: 1em auto;
  max-width: max-content;
  min-height: 2em;
  padding: .25em; /* leaving room for the rounded borders */
  
  border: 3px solid var(--clr-secondary-700);
  border-radius: 10% / 50%;
  background: var(--clr-neutral-100);
  
  font-size: var(--fs-800);
  font-family: var(--ff-heading);
  text-align: center;
  color: var(--clr-secondary-400);
  
  isolation: isolate;
  
  &::before,
  &::after {
    content: '';
    
    background: url('briefs.webp') center/contain no-repeat;
    
    opacity: .75;
    rotate: -15deg;
    z-index: -1;
  }
  
  &::after {
    rotate: 15deg;
  }
  
  & span {
    margin-top: .125em; /* offsetting the font's high baseline */
  }
  
  & span::before {
    content: '';
    position: absolute;
    inset: 0;
    
    border-radius: 10% / 50%;
    z-index: -2;
    
    background: var(--clr-secondary-100);
    -webkit-mask: url('tartan.svg') repeat;
    mask: url('tartan.svg') repeat;
    opacity: .5;
  }
}

/**
 * Page-specific stuff
 */

#slot-form {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr auto;
  
  align-items: stretch;
}

.slot-form-step {
  --_step-default-bg-clr: var(--clr-neutral-200);
  --_card-border-clr: var(--clr-primary-400);
  --_card-shadow-clr: hsl(var(--hsl-neutral-900) / .4);
  --_card-checked-border-clr: var(--clr-primary-400); /* or --clr-primary-600? */ /* or remove and use the same border as un-checked */
  --_card-checked-bg-clr: var(--clr-primary-100);
  
  position: relative;
  padding: calc(40px + 1em) 1em;
  
  background-color: var(--_step-bg-clr, var(--_step-default-bg-clr));
  
  & legend {
    /* The legend has to be floated (or absolute-positioned) to ensure that the ::before element 
    is **really** the very first in the fieldset */
    float: left;
    clear: both;
    
    width: 100%;
    
    font-family: var(--ff-heading);
    font-size: var(--fs-700);
    text-align: left;
    
    color: var(--clr-primary-100);
    -webkit-text-stroke: 1px var(--clr-primary-400);
  }
  
  &:nth-of-type(2n + 1) {
    --_step-bg-clr: var(--clr-secondary-100);
    --_card-border-clr: var(--clr-secondary-700);
    --_card-shadow-clr: hsl(var(--hsl-secondary-900) / .75);
    --_card-checked-border-clr: var(--clr-secondary-700);
    --_card-checked-bg-clr: var(--clr-secondary-400);

    --wave-factor: 15%;
  }
  
  &:nth-of-type(2n + 1)::before, 
  &:nth-of-type(2n + 1)::after {
    position: absolute;
    content: '';
    width: 100%;
    height: 40px;
    left: 0;
    
    background: var(--_step-default-bg-clr);
    -webkit-mask-image: url(waves.svg);
    mask-image: url(waves.svg);
  }
  
  &:nth-of-type(2n + 1)::before {
    top: 0;
    
    -webkit-mask-size: calc(100% + var(--wave-factor));
    mask-size: calc(100% + var(--wave-factor));
  }
  
  &:nth-of-type(2n + 1)::after {
    bottom: 0;
    
    -webkit-mask-size: calc(90% + (1.5 * var(--wave-factor)));
    mask-size: calc(90% + (1.5 * var(--wave-factor)));
    transform: rotate(.5turn);
  }
  
  /* 3, 5, 7, 9*/
  &:nth-of-type(2n + 3) {
    --wave-factor: 35%;
  }
  
  /* 5, 7, etc. */
  &:nth-of-type(2n + 5) {
    --wave-factor: 55%;
  }
  
  &:nth-of-type(2n + 7) {
    --wave-factor: 75%;
  }
}

.slot-form-step-main {
  clear: both;
  padding-top: 1em;
  height: 100%;
  
  /* Laying a shape over the list when it is a placeholder */ 
  &:has(ul.checkable-cards-list.placeholder) {
    position: relative;
    
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      z-index: 1;
      
      background-color: var(--_step-bg-clr, var(--_step-default-bg-clr)); /* OPTIMIZE: use a darker, but alpha-ized, color? */
      -webkit-mask: url('briefs.svg') center 30%/55% repeat-y;
      mask: url('briefs.svg') center 30%/55% repeat-y;
    }
  }
}

#slot-form-step3 {
  /* TODO */
}

.checkable-cards-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25ch, 1fr));
  grid-auto-rows: 4em; /* OPTIMIZE: use auto and let the card set its height? */
  gap: 1em;
  
  padding: 0;
  
  list-style: none;
}

.checkable-card { 
  display: block;
  height: 100%;
  
  overflow: hidden;
  
  background-color: var(--clr-neutral-100);
  border-radius: .5rem;
  border: solid 1px var(--_card-border-clr);
  box-shadow: 0 0.125rem 0.375rem var(--_card-shadow-clr);
  
  & label {
    display: block;
    
    width: 100%;
    height: 100%;
    padding: 0.5em;
  }
  
  & input[type="radio"] {
    clip: rect(0 0 0 0);
    clip-path: inset(100%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }
  
  &:has(input:checked) {
    border-color: var(--_card-checked-border-clr);
    background-color: var(--_card-checked-bg-clr);
  }
}

/* Redrawing the borders and box shadow _over_ the card of placeholder cards 
   so that the overlayed shape doesn't show through */
.checkable-cards-list.placeholder .checkable-card {
  position: relative;
  
  border: unset;
  box-shadow: unset;
  overflow: unset;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    
    background-color: transparent;
    
    border-radius: .5rem;
    border: solid 1px var(--_card-border-clr);
    box-shadow: 0 0.125rem 0.375rem var(--_card-shadow-clr);
    
    z-index: 2;
  }
}

/**
 * Alternatives for browser support
 */
@supports not (-webkit-text-stroke-width: 1px) {
  .slot-form-step legend {
    text-shadow:
      -1px -1px 0 var(--clr-primary-400),
      1px -1px 0 var(--clr-primary-400),
      -1px 1px 0 var(--clr-primary-400),
      1px 1px 0 var(--clr-primary-400);
    }
  }
}
